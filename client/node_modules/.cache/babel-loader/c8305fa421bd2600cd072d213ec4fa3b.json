{"ast":null,"code":"var _jsxFileName = \"/Users/thomasanda/PersonalProjects/tidal-api/client/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport useFetch from './hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const {\n    data,\n    setData\n  } = useFetch(); // const [inputValue, setInputValue] = useState('');\n\n  const [selectedValue, setSelectedValue] = useState(null);\n\n  const handleInputChange = value => {\n    setData(value);\n  };\n\n  const handleChange = value => {\n    setSelectedValue(value);\n  };\n\n  const loadOptions = async inputValue => {\n    return await fetch(`http://127.0.0.1:5000/search_artist/${inputValue}`).then(res => console.log(res.name));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\"Input Value: \\\"\", data, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n      cacheOptions: true,\n      defaultOptions: true,\n      value: selectedValue,\n      getOptionLabel: e => e.name,\n      getOptionValue: e => e.id,\n      loadOptions: loadOptions,\n      onInputChange: handleInputChange,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\"Selected Value: \", JSON.stringify(selectedValue || {}, null, 2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"kZ62OAcOBpe7lsCebQVmS3gmwMw=\", false, function () {\n  return [useFetch];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/thomasanda/PersonalProjects/tidal-api/client/src/components/SearchBar.js"],"names":["React","useState","AsyncSelect","useFetch","SearchBar","data","setData","selectedValue","setSelectedValue","handleInputChange","value","handleChange","loadOptions","inputValue","fetch","then","res","console","log","name","e","id","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBH,QAAQ,EAAlC,CADsB,CAEtB;;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMQ,iBAAiB,GAAGC,KAAK,IAAI;AACjCJ,IAAAA,OAAO,CAACI,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC5BF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAOC,UAAP,IAAsB;AACxC,WAAO,MAAMC,KAAK,CAAE,uCAAsCD,UAAW,EAAnD,CAAL,CAA2DE,IAA3D,CAAgEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAAvE,CAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA,oCAAoBd,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AACE,MAAA,YAAY,MADd;AAEE,MAAA,cAAc,MAFhB;AAGE,MAAA,KAAK,EAAEE,aAHT;AAIE,MAAA,cAAc,EAAEa,CAAC,IAAIA,CAAC,CAACD,IAJzB;AAKE,MAAA,cAAc,EAAEC,CAAC,IAAIA,CAAC,CAACC,EALzB;AAME,MAAA,WAAW,EAAET,WANf;AAOE,MAAA,aAAa,EAAEH,iBAPjB;AAQE,MAAA,QAAQ,EAAEE;AARZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAA,qCAAsBW,IAAI,CAACC,SAAL,CAAehB,aAAa,IAAI,EAAhC,EAAoC,IAApC,EAA0C,CAA1C,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlCD;;GAAMH,S;UACsBD,Q;;;KADtBC,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport useFetch from './hooks/useFetch';\n\n\nconst SearchBar = () => {\n  const { data, setData } = useFetch();\n  // const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useState(null)\n\n  const handleInputChange = value => {\n    setData(value)\n  }\n\n  const handleChange = value => {\n    setSelectedValue(value)\n  }\n\n  const loadOptions = async (inputValue) => {\n    return await fetch(`http://127.0.0.1:5000/search_artist/${inputValue}`).then(res => console.log(res.name))\n  }\n\n  return (\n    <div className=\"search-bar\">\n      <pre>Input Value: \"{data}\"</pre>\n      <AsyncSelect\n        cacheOptions\n        defaultOptions\n        value={selectedValue}\n        getOptionLabel={e => e.name}\n        getOptionValue={e => e.id}\n        loadOptions={loadOptions}\n        onInputChange={handleInputChange}\n        onChange={handleChange}\n      />\n      <pre>Selected Value: {JSON.stringify(selectedValue || {}, null, 2)}</pre>\n    </div>\n  )\n\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}