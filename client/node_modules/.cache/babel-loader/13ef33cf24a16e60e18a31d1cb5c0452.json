{"ast":null,"code":"var _jsxFileName = \"/Users/thomasanda/PersonalProjects/tidal-api/client/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useState(null);\n\n  const handleInputChange = value => {\n    setInputValue(value);\n  };\n\n  const handleChange = value => {\n    setSelectedValue(value);\n  };\n\n  const loadOptions = inputValue => {\n    return fetch(`http://127.0.0.1:5000/search_artist/${inputValue}`).then(res => console.log(res.name));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\"Input Value: \\\"\", inputValue, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n      cacheOptions: true,\n      defaultOptions: true,\n      getOptionLabel: e => e.name,\n      getOptionValue: e => e.id,\n      loadOptions: loadOptions,\n      onInputChange: handleInputChange,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\"Selected Value: \", JSON.stringify(selectedValue || {}, null, 2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"W3S88AewQs9zutGjovK+qY6+DAw=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/thomasanda/PersonalProjects/tidal-api/client/src/components/SearchBar.js"],"names":["React","useState","AsyncSelect","SearchBar","inputValue","setInputValue","selectedValue","setSelectedValue","handleInputChange","value","handleChange","loadOptions","fetch","then","res","console","log","name","e","id","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMO,iBAAiB,GAAGC,KAAK,IAAI;AACjCJ,IAAAA,aAAa,CAACI,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC5BF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACD,GAFD;;AAGA,QAAME,WAAW,GAAGP,UAAU,IAAI;AAChC,WAAOQ,KAAK,CAAE,uCAAsCR,UAAW,EAAnD,CAAL,CAA2DS,IAA3D,CAAgEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAAvE,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA,oCAAoBb,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AACE,MAAA,YAAY,MADd;AAEE,MAAA,cAAc,MAFhB;AAGE,MAAA,cAAc,EAAEc,CAAC,IAAIA,CAAC,CAACD,IAHzB;AAIE,MAAA,cAAc,EAAEC,CAAC,IAAIA,CAAC,CAACC,EAJzB;AAKE,MAAA,WAAW,EAAER,WALf;AAME,MAAA,aAAa,EAAEH,iBANjB;AAOE,MAAA,QAAQ,EAAEE;AAPZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA,qCAAsBU,IAAI,CAACC,SAAL,CAAef,aAAa,IAAI,EAAhC,EAAoC,IAApC,EAA0C,CAA1C,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/BD;;GAAMH,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport AsyncSelect from 'react-select/async';\n\n\nconst SearchBar = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useState(null)\n\n  const handleInputChange = value => {\n    setInputValue(value)\n  }\n\n  const handleChange = value => {\n    setSelectedValue(value)\n  }\n  const loadOptions = inputValue => {\n    return fetch(`http://127.0.0.1:5000/search_artist/${inputValue}`).then(res => console.log(res.name))\n  }\n\n  return (\n    <div className=\"search-bar\">\n      <pre>Input Value: \"{inputValue}\"</pre>\n      <AsyncSelect\n        cacheOptions\n        defaultOptions\n        getOptionLabel={e => e.name}\n        getOptionValue={e => e.id}\n        loadOptions={loadOptions}\n        onInputChange={handleInputChange}\n        onChange={handleChange}\n      />\n      <pre>Selected Value: {JSON.stringify(selectedValue || {}, null, 2)}</pre>\n    </div>\n  )\n\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}